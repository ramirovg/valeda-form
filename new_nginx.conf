# Defines the upstream server for the Valeda Node.js API
upstream valeda_api {
    server 127.0.0.1:3001;
    keepalive 32;
}

# Default server configuration
server {
    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    server_name oftalmonet.mx www.oftalmonet.mx;

    # Your existing locations
    location / {
            try_files $uri $uri/ =404;
    }

    location /api {
            proxy_pass http://127.0.0.1:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 1200;
            proxy_connect_timeout 1200;
            proxy_send_timeout 1200;
            proxy_buffering on;
            proxy_buffers 32 4k;
    }
    location /api2 {
            proxy_pass http://127.0.0.1:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 1200;
            proxy_connect_timeout 1200;
            proxy_send_timeout 1200;
            proxy_buffering on;
            proxy_buffers 32 4k;
    }

    # --- START: Valeda Application Configuration ---

    # Serves the Angular frontend files
    location /valeda/ {
        alias /var/www/oftalmonet.mx/valeda/browser/;
        try_files $uri $uri/ @valeda_fallback;
    }

    # Fallback for Angular's client-side routing
    location @valeda_fallback {
        rewrite ^/valeda(.*)$ /valeda/index.html last;
    }

    # Forwards API requests to the Valeda backend service
    location /valeda/api/ {
        proxy_pass http://valeda_api/valeda/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # --- END: Valeda Application Configuration ---

    # SSL configuration managed by Certbot
    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/oftalmonet.mx-0001/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/oftalmonet.mx-0001/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

# HTTP to HTTPS redirect server
server {
    if ($host = oftalmonet.mx) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80 default_server;
    listen [::]:80 default_server;

    server_name oftalmonet.mx www.oftalmonet.mx;
    return 404; # managed by Certbot
}
